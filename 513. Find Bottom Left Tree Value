/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int flag=0;
    int value=INT_MIN;
    void check(TreeNode* root, int &h,int level)
    {
        if(root==NULL) return ;
        if(level==h-1 && flag==0 && value==INT_MIN)
        {
            flag=!flag;
            value=root->val;
        }
        check(root->left,h,level+1);
        check(root->right,h,level+1);
        return;
        
    }
    int height(TreeNode* root)
    {
        if(root==NULL) return 0;
        return 1+max(height(root->left),height(root->right));
    }
    int findBottomLeftValue(TreeNode* root) {
        if(root==NULL )return 0;
        if(root->left==NULL && root->right==NULL )return root->val;
        
        int h= height(root);
        check(root,h,0);
        return value;
    }
};
