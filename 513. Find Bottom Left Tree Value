/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int value=INT_MIN;
    void check(TreeNode* root, int &maxdepth,int level)
    {
        if(root==NULL) return ;
        check(root->left,maxdepth,level+1);
        check(root->right,maxdepth,level+1);
        if(level>maxdepth)
        {maxdepth=level;
        value=root->val;}
        return;
        
    }
    
    int findBottomLeftValue(TreeNode* root) {
        if(root==NULL )return 0;
        if(root->left==NULL && root->right==NULL )return root->val;
        int  maxdepth=-1;
        check(root,maxdepth,0);
        return value;
    }
};
